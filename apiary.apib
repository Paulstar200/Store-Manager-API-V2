FORMAT: 1A
https://storemanagerapi2.herokuapp.com/

# Store-manager-api-v2

Store Manager is a web application that helps store owners
manage sales and product inventory records.
This application is meant for use in a single store.

## HEROKU LINK
https://storemanagerapi2.herokuapp.com

## ENDPOINTS
**GET /products - Fetch all products Get all available products.**

**GET /products/productId - Fetch a single product record**

**GET /sales - Fetch all sale records Get all sale records.**

**GET /sales/saleId - Fetch a single sale record**

**POST /products - Create a product**

**POST /sales - Create a sale order**

**POST /login - Login attendant/admin**

**POST /register - Admin Register user**

**PUT /products/productId - Admin update product**

**DELETE /products/saleId - Admin delete a product**

To begin, remember to add /api/v2 to the heroku link or the localhost link before inserting the endpoints


### Login admin [POST]

https://storemanagerapi2.herokuapp.com/api/v2/auth/login


Log in with the admin's email and password with the following credentials.

+ Request (application/json)

        
            {
                 
                "email": "vitalispaul48@live.com,
                "password": "manu2012"
            }
        

+ Response 201 (application/json)

    + Headers

            Location: api/v2/auth/login

    + Body

            
               {
                 
                "email": "vitalispaul48@live.com,
                "password": "manu2012"
                 }

### Register a user[POST]

The admin can register a store attendant using the following endpoint.

https://storemanagerapi2.herokuapp.com/api/v2/auth/signup

+ Request 200 (application/json)

    + Headers

            Location: api/v2/auth/signup

    + Body

            
               {
                 "username": "WendyOtieno",
                 "email": "wendyotieno34@gmail.com",
                 "password": "manu2012",
                 "role": "attendant"
            }
            
+ Response 201 (application/json)

    + Headers
            
            Location: api/v2/auth/signup
            
    + Body
           
                {
                    "message": "user created successfully"
                }
                
                
### Login attendant [POST]

https://storemanagerapi2.herokuapp.com/api/v2/auth/login


Log in with the attendant's email and password.

+ Request (application/json)

        
            {
                 "email": "wendyotieno34@gmail.com",
                 "password": "manu2012"
            }
        

+ Response 201 (application/json)

    + Headers

            Location: api/v2/auth/login

    + Body

            
               {
                "message" : "Login successful"
                "access_token": "1jioj1d89j9rwjd;'sd,;sdj9sd8j"
                }

                
### Create a Product[POST]

The admin can post a product

https://storemanagerapi2.herokuapp.com/api/v2/products

+ Request (application/json)

        
            {
                "name": "Nike",
                "price": 300, 
                "available_stock": 300,
                "min_stock": 20,
                "category": "Shoes"
            }
        

+ Response 201 (application/json)

    + Headers

            Location: api/v2/products

    + Body

            
               {
                    "Message": "Successfully posted products",
                     "Products": [
                                {
                                    "product id": 1,
                                    "name": "Nike",
                                    "price": 300,
                                    "available_stock": 300,
                                    "min_stock": 20,
                                    "category": "Shoes"
                                }
                }
         
            
            
### Get all Products [GET]
The admin or store attendant can retrieve all products 
https://storemanagerapi2.herokuapp.com/api/v2/products

+ Response 200 (application/json)

        {
        "Message": "Successfully retrieved products",
        "Products": [
            {
                "product id": 1,
                "name": "Nike",
                "price": 300,
                "available_stock": 300,
                "min_stock": 20,
                "category": "Shoes"
            },
            {
                "product id": 2,
                "name": "Cupboard",
                "price": 30303030,
                "available_stock": 200,
                "min_stock": 500,
                "category": "Furniture"
            }
        ]
    }


### Get single product [GET]
THe admin or store attendant can get a single product

 + Headers

            Location: api/v2/products/<productid>
            https://storemanagerapi2.herokuapp.com/api/v2/products<productid>
            
+ Response 200 (application/json)

        
           {
            "message": "Product retrieved successfully",
            "product": {
                "product id": 1,
                "name": "Nike",
                "price": 300,
                "available_stock": 200,
                "min_stock": 20,
                "category": "Furniture"
            }
        }

### Create a sale record[POST]

A store attendant can post a sale 

https://storemanagerapi2.herokuapp.com/api/v2/sales

+ Request (application/json)

        
        {
            "name": "Nike",
            "quantity" : "20"
        }
        

+ Response 201 (application/json)

    + Headers

            Location: api/v2/sales

    + Body

            
            {
                "message": "Sale successful",
                "remaining quantity": 260
            }



            
### Get all sales records [GET]
https://storemanagerapi2.herokuapp.com/api/v2/sales
The attendant can get all the sale records
+ Response 200 (application/json)


        {
            "message": "Successfully retrieved the sales records",
            "Products": [
                {
                    "sale id": 1,
                    "product_name": "Nike",
                    "quantity": 20,
                    "price": 300,
                    "total_price": 6000,
                    "attendant_name": "Manu2012"
                }
            ]
        }

### Get single sale records [GET]
The sale attendant can get a single sale record
 + Headers

            Location: api/v2/sales/<salesid>
            https://storemanagerapi2.herokuapp.com/api/v2/sales/<salesid>
            
+ Response 200 (application/json)

        
        {
            "message": "Sale record retrieved successfully",
            "sale": {
                "product id": 1,
                "attendant_name": "Manu2012",
                "product_name": "Nike",
                "quantity": 20,
                "price": 300,
                "total_price": 6000
            }
        }

### DELETE PRODUCT [POST]
The store owner can delete a product
 + Headers

            Location: api/v2/products/<productid>
            https://storemanagerapi2.herokuapp.com/api/v2/products/<productid>
            
+ Response 202 (application/json)

        
        {
            "message": "Deleted",
            "product": {
                "product id": 1,
                "name": "Nike",
                "inventory": 200,
                "price": 300,
                "minimum_stock": 20,
                "category": "foodstuff"
                
            }
        }

### UPDATE PRODUCT [PUT]
The store owner can update a product
 + Headers

            Location: api/v2/products/<productid>
            https://storemanagerapi2.herokuapp.com/api/v2/products
            
+ Response 202 (application/json)

        
        {
            "message": "Product updated successfully",
            "product": {
                "product id": 1,
                "name": "Nike",
                "inventory": 200,
                "price": 300,
                "minimum_stock": 20,
                "category": "foodstuff"
            }
        }